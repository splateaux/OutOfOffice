Defining maps:
* Text files
* X by Y matrix, integers

Each tile should have a parameterless constructor, calling the base class with static properties.
Each map should be in a xml file, not txt, that has a mapping of numbers to class name. Therefore 0 would be null, and 1-9 mapped to 9 distinct classes.
The maps will be generated by a static method in map, that will require a IInstanceCreator, which will be incharge of taking the class name
	and turning it into an instance of the class.

Map
- collisions based on bounding boxes, then use previous position to make decisions

Game Engine To Do's:
1. Tiles should be any size
2. Tile Sets, a dictionary mapping tile to texture. A brown tile set, gray tile set, etc


Bugs:
1 px margin - mario floats on 1 pixel to avoid collision with tiles under him - i like this

Added IsEnemy - but isn't used. Maybe a set of fields to tell which directions the enemy can hit the player? Could be another class on top of physicsobject

Dying:
- go small
- go to crouched version
-jump and fall through map

Jumping:
-still instant - 2 blocks, first small pipe
-still holding max - 4 blocks, largest pipe

HUD:
-scores from killing goomba, for example, move skyward

Powerups: - done!
-Mushroom bounces off pipes

Scrolling:
-begin move right after 6 tiles of space, thats when stationary
-moving - keeps player centered

Effects:
-momentarry pause when getting powerup and getting hit

Gameplay:
-checkpoints